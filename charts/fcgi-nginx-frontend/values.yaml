replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

affinity: {}

# The FCGI backend server
fastcgiBackend: ""
# The FCGI index file
fastcgiIndex: index.php
# The parameters passed to the FCGI backend
fastcgiParams:
  SCRIPT_FILENAME: '$fastcgi_script_name'
  QUERY_STRING: '$query_string'
  REQUEST_METHOD: '$request_method'
  CONTENT_TYPE: '$content_type'
  CONTENT_LENGTH: '$content_length'
# Server block
serverBlock: |
  root /var/www/html;
  location / {
    try_files $uri /index.php$is_args$args;
  }
  location ~ \.php$ {
    <FCGI_BACKEND>
    <FCGI_INDEX>
    <FCGI_PARAMS>
  }
